django-app:
  image:
    repository: CHANGE_ME

  imagePullSecrets:
    - name: regcred-local

  nameOverride: "" # append this name to helm installation name.
  # helm deploy my-awesome-app django-app/     => my-awesome-nameOverride-app-web-74d48f548f-x4zhs
  fullnameOverride: "" # replace entire helm installation name with this.
  # helm deploy my-awesome-app django-app/     => fullnameOverride-web-74d48f548f-x4zhs

  env:
    normal: 
      #App settings
      APP_DEBUG: CHANGE_ME
      DJANGO_LOGLEVEL: CHANGE_ME
      FRONTEND_URL: CHANGE_ME
      BACKEND_URL: CHANGE_ME
      DATABASE_MIGRATE_DISABLE: true # default false (switch to true in case we wanted to disable built in migrations - dealing with sensitive data)

    secret: 
      SECRET_KEY: CHANGE_ME
      SENTRY_DSN: ''
      #Safe Point


  postgresql:
    enabled: true
    auth:
      database: main
      username: postgres
      password: postgres
      postgresPassword: postgres # Must be set
    postgresqlDatabase: main
    postgresqlUsername: postgres
    postgresqlPassword: postgres # Must be set
    servicePort: 5432

  # Default to disabled, use a managed service. But can be enabled here.
  redis:
    enabled: true
    auth:
      enabled: true
      password: redis-password

    master:
      persistence:
        enabled: false
    replica:
      replicaCount: 1
      persistence:
        enabled: false

frontend-app:
  # Default values for django.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  image:
    repository: CHANGE_ME
    # pullPolicy: Always
    pullPolicy: IfNotPresent
    tag: CHANGE_ME

  imagePullSecrets:
    - name: regcred-local

  nameOverride: "" # append this name to helm installation name.
  # helm deploy my-awesome-app django-app/     => my-awesome-nameOverride-app-web-74d48f548f-x4zhs
  fullnameOverride: "" # replace entire helm installation name with this.
  # helm deploy my-awesome-app django-app/     => fullnameOverride-web-74d48f548f-x4zhs

  env:
    normal: #
    secret: #

  frontend:
    api:
      url: CHANGE_ME
      # version: '111'

    replicaCount: 2
    port: 8000
    autoscaling:
      enabled: false
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    budget:
      minAvailable: 1 # Ignored when replicaCount is 1
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
    nodeSelector: {}
    tolerations: []
    affinity: {}
      # podAntiAffinity:
      #   preferredDuringSchedulingIgnoredDuringExecution:
      #   - weight: 100
      #     podAffinityTerm:
      #       labelSelector:
      #         matchExpressions:
      #         - key: app.kubernetes.io/instance
      #           operator: In
      #           values:
      #           - glitchtip-prod-web
      #       topologyKey: kubernetes.io/hostname

    readinessProbe:
      failureThreshold: 10
      initialDelaySeconds: 5
      timeoutSeconds: 10
      path: "/?readinessProbe"
    livenessProbe:
      failureThreshold: 5
      initialDelaySeconds: 5
      timeoutSeconds: 10
      path: "/?livenessProbe"

    service:
      type: ClusterIP
      port: 8000

    ingress:
      enabled: true
      className: ""
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"

      hosts:
        - host: CHANGE_ME
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
      - secretName: example-tls
        hosts:
          - CHANGE_ME

adminer:
  enabled: false
  ingress:
    enabled: true
    hosts:
      - CHANGE_ME
    path: /adminer
